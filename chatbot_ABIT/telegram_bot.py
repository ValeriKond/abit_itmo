import logging
import os
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from chatbot import ITMOAdmissionChatbot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


class TelegramChatbot:
    def __init__(self, token: str):
        self.token = token
        self.chatbot = ITMOAdmissionChatbot()
        self.user_sessions = {}  # –•—Ä–∞–Ω–µ–Ω–∏–µ —Å–µ—Å—Å–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    def get_main_keyboard(self):
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
        keyboard = [
            [KeyboardButton("üîç –°—Ä–∞–≤–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã"), KeyboardButton("üí° –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")],
            [KeyboardButton("üìö –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã"), KeyboardButton("üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è")],
            [KeyboardButton("üè† –û–±—â–µ–∂–∏—Ç–∏–µ"), KeyboardButton("üéØ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏")],
            [KeyboardButton("üìù –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"), KeyboardButton("‚ùì –ü–æ–º–æ—â—å")]
        ]
        return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = update.effective_user.id
        self.user_sessions[user_id] = ITMOAdmissionChatbot()

        welcome_message = """
üéì –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —á–∞—Ç-–±–æ—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞–≥–∏—Å—Ç–µ—Ä—Å–∫–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã –ò–¢–ú–û!

–Ø –ø–æ–º–æ–≥—É –≤–∞–º –≤—ã–±—Ä–∞—Ç—å –º–µ–∂–¥—É –¥–≤—É–º—è –ø—Ä–æ–≥—Ä–∞–º–º–∞–º–∏:
‚Ä¢ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç
‚Ä¢ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–ø—Ä—è–º—É—é.
        """

        await update.message.reply_text(
            welcome_message,
            reply_markup=self.get_main_keyboard()
        )

    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
ü§ñ –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:

üìå –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
‚Ä¢ /start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ /profile - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å

üîç –ß—Ç–æ —è —É–º–µ—é:
‚Ä¢ –°—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã
‚Ä¢ –î–∞–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ–± –æ–±—É—á–µ–Ω–∏–∏
‚Ä¢ –ü–æ–º–æ–≥–∞—Ç—å —Å –≤—ã–±–æ—Ä–æ–º –¥–∏—Å—Ü–∏–ø–ª–∏–Ω

üí¨ –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é!
        """

        await update.message.reply_text(help_text)

    async def profile_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
        profile_text = """
üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:

‚Ä¢ –í–∞—à–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç)
‚Ä¢ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã –≤ IT
‚Ä¢ –ó–Ω–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò
‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ.
        """

        await update.message.reply_text(profile_text)

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_id = update.effective_user.id
        message_text = update.message.text

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if user_id not in self.user_sessions:
            self.user_sessions[user_id] = ITMOAdmissionChatbot()

        chatbot = self.user_sessions[user_id]

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
        if message_text == "üîç –°—Ä–∞–≤–Ω–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã":
            response = chatbot.compare_programs()
        elif message_text == "üí° –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏":
            response = chatbot.get_recommendations()
        elif message_text == "üìö –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã":
            response = self.get_academic_plans_info()
        elif message_text == "üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è":
            response = self.get_cost_info()
        elif message_text == "üè† –û–±—â–µ–∂–∏—Ç–∏–µ":
            response = self.get_dormitory_info()
        elif message_text == "üéØ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏":
            response = self.get_career_info()
        elif message_text == "üìù –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å":
            response = self.get_profile_info(chatbot)
        elif message_text == "‚ùì –ü–æ–º–æ—â—å":
            await self.help_command(update, context)
            return
        else:
            # –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ - –ø–µ—Ä–µ–¥–∞–µ–º –≤ —á–∞—Ç-–±–æ—Ç
            response = chatbot.get_ai_response(message_text)

        await update.message.reply_text(response, reply_markup=self.get_main_keyboard())

    def get_academic_plans_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–∞—Ö"""
        return """
üìö –£—á–µ–±–Ω—ã–µ –ø–ª–∞–Ω—ã –ø—Ä–æ–≥—Ä–∞–º–º:

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:
‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
‚Ä¢ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 2 –≥–æ–¥–∞
‚Ä¢ –§–æ—Ä–º–∞ –æ–±—É—á–µ–Ω–∏—è: –û—á–Ω–∞—è

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö:
‚Ä¢ –°—Å—ã–ª–∫–∞ –Ω–∞ —É—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —É—á–µ–±–Ω—ã—Ö –ø–ª–∞–Ω–æ–≤ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º.
        """

    def get_cost_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–æ–∏–º–æ—Å—Ç–∏"""
        return """
üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—É—á–µ–Ω–∏—è:

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:
‚Ä¢ –ö–æ–Ω—Ç—Ä–∞–∫—Ç–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ: 599 000 ‚ÇΩ/–≥–æ–¥
‚Ä¢ –ë—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞: –µ—Å—Ç—å (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è)

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö:
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞

üí° –¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω—ã:
‚Ä¢ –¶–µ–ª–µ–≤—ã–µ –º–µ—Å—Ç–∞
‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∏–ø–µ–Ω–¥–∏–∏
‚Ä¢ –õ—å–≥–æ—Ç—ã –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        """

    def get_dormitory_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—â–µ–∂–∏—Ç–∏–∏"""
        return """
üè† –û–±—â–µ–∂–∏—Ç–∏–µ:

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:
‚Ä¢ –û–±—â–µ–∂–∏—Ç–∏–µ: ‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ
‚Ä¢ –í–æ–µ–Ω–Ω—ã–π —É—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä: ‚úÖ –ï—Å—Ç—å

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –≤ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö:
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Ç–æ—á–Ω—è–µ—Ç—Å—è

üìç –ê–¥—Ä–µ—Å –ò–¢–ú–û:
197101, –≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ö—Ä–æ–Ω–≤–µ—Ä–∫—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥.49
        """

    def get_career_info(self):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—å–µ—Ä–µ"""
        return """
üéØ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:

üîπ –ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç:
‚Ä¢ ML Engineer (170-300k ‚ÇΩ)
‚Ä¢ Data Engineer
‚Ä¢ AI Product Developer  
‚Ä¢ Data Analyst

üîπ –ü–∞—Ä—Ç–Ω–µ—Ä—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã:
‚Ä¢ X5 Group, Ozon –ë–∞–Ω–∫, –ú–¢–°
‚Ä¢ Sber AI, –ù–æ—Ä–Ω–∏–∫–µ–ª—å
‚Ä¢ Napoleon IT, Genotek
‚Ä¢ Raft, AIRI, DeepPavlov

üìà –°–ø—Ä–æ—Å –Ω–∞ AI-—ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞—Å—Ç–∏!
        """

    def get_profile_info(self, chatbot):
        """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not chatbot.user_profile:
            return """
üìù –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø—É—Å—Ç.

–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π:
‚Ä¢ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ
‚Ä¢ –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
‚Ä¢ –ù–∞–≤—ã–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è
‚Ä¢ –ò–Ω—Ç–µ—Ä–µ—Å—ã –≤ –æ–±–ª–∞—Å—Ç–∏ –ò–ò
‚Ä¢ –ö–∞—Ä—å–µ—Ä–Ω—ã–µ —Ü–µ–ª–∏
            """
        else:
            profile_text = "üìù –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\n\n"
            for key, value in chatbot.user_profile.items():
                profile_text += f"‚Ä¢ {key}: {value}\n"
            return profile_text

    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error(f"Update {update} caused error {context.error}")

        if update.effective_message:
            await update.effective_message.reply_text(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )

    def run(self):
        """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
        application = Application.builder().token(self.token).build()

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        application.add_handler(CommandHandler("start", self.start))
        application.add_handler(CommandHandler("help", self.help_command))
        application.add_handler(CommandHandler("profile", self.profile_command))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        application.add_error_handler(self.error_handler)

        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        application.run_polling()


if __name__ == "__main__":
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
    BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

    if not BOT_TOKEN:
        print("–û—à–∏–±–∫–∞: –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_BOT_TOKEN")
        print("–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –º–æ–∂–Ω–æ —É @BotFather –≤ Telegram")
        exit(1)

    bot = TelegramChatbot(BOT_TOKEN)
    bot.run()